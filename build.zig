const std = @import("std");

pub fn build(b: *std.build.Builder) void {
    const target = b.standardTargetOptions(.{});
    const opt = b.standardOptimizeOption(.{});

    // const lib = b.addStaticLibrary(.{
    //     .name = "libz",
    //     .target = target,
    //     .optimize = opt,
    // });
    // lib.addIncludePath(".");
    // lib.installHeadersDirectory("third_party/libz/", ".");
    // lib.addCSourceFiles(&.{
    //     "third_party/libz/adler32.c",
    //     "third_party/libz/crc32.c",
    //     "third_party/libz/deflate.c",
    //     "third_party/libz/gzclose.c",
    //     "third_party/libz/gzlib.c",
    //     "third_party/libz/gzwrite.c",
    //     "third_party/libz/inffast.c",
    //     "third_party/libz/compress.c",
    //     "third_party/libz/gzread.c",
    //     "third_party/libz/infback.c",
    //     "third_party/libz/inflate.c",
    //     "third_party/libz/inftrees.c",
    //     "third_party/libz/trees.c",
    //     "third_party/libz/uncompr.c",
    //     "third_party/libz/zutil.c",
    // }, &[_][]const u8{});
    // lib.linkLibC();

    const lib = b.addStaticLibrary(.{
        .name = "blink",
        .target = target,
        .optimize = opt,
    });
    lib.addIncludePath(".");
    lib.addCSourceFiles(sources, &[_][]const u8{
        "-fno-align-functions",
        "-fno-common",
        "-pthread",
        "-fno-omit-frame-pointer",
        "-fno-optimize-sibling-calls",
        "-U_FORTIFY_SOURCE",
        "-D_FILE_OFFSET_BITS=64",
        "-D_DARWIN_C_SOURCE",
        "-D_DEFAULT_SOURCE",
        "-D_BSD_SOURCE",
        "-D_GNU_SOURCE",
    });
    lib.linkLibC();

    const blink = b.addExecutable(.{
        .name = "blink",
        .target = target,
        .optimize = opt,
    });
    blink.addIncludePath(".");
    blink.addCSourceFile("blink/blink.c", &[_][]const u8{
        "-fno-align-functions",
        "-fno-common",
        "-pthread",
        "-fno-omit-frame-pointer",
        "-fno-optimize-sibling-calls",
        "-U_FORTIFY_SOURCE",
        "-D_FILE_OFFSET_BITS=64",
        "-D_DARWIN_C_SOURCE",
        "-D_DEFAULT_SOURCE",
        "-D_BSD_SOURCE",
        "-D_GNU_SOURCE",
    });
    blink.linkSystemLibrary("z");
    blink.linkSystemLibrary("m");
    blink.linkLibC();
    blink.linkLibrary(lib);
    b.installArtifact(blink);

    const blinkenlights = b.addExecutable(.{
        .name = "blinkenlights",
        .target = target,
        .optimize = opt,
    });
    blinkenlights.addIncludePath(".");
    blinkenlights.addCSourceFile("blink/blinkenlights.c", &[_][]const u8{
        "-fno-align-functions",
        "-fno-common",
        "-pthread",
        "-fno-omit-frame-pointer",
        "-fno-optimize-sibling-calls",
        "-U_FORTIFY_SOURCE",
        "-D_FILE_OFFSET_BITS=64",
        "-D_DARWIN_C_SOURCE",
        "-D_DEFAULT_SOURCE",
        "-D_BSD_SOURCE",
        "-D_GNU_SOURCE",
    });
    blinkenlights.linkSystemLibrary("z");
    blinkenlights.linkSystemLibrary("m");
    blinkenlights.linkLibC();
    blinkenlights.linkLibrary(lib);
    b.installArtifact(blinkenlights);
}

const sources: []const []const u8 = &.{
    "blink/abort.c",
    "blink/address.c",
    "blink/alu.c",
    "blink/alu1.c",
    "blink/alu2.c",
    "blink/alui.c",
    "blink/ancillary.c",
    "blink/argv.c",
    "blink/assert.c",
    "blink/bcd.c",
    "blink/bios.c",
    "blink/biosrom.c",
    "blink/bit.c",
    "blink/bitscan.c",
    "blink/bmi2.c",
    "blink/breakpoint.c",
    "blink/breg.c",
    "blink/buffer.c",
    "blink/bus.c",
    "blink/cga.c",
    "blink/clmul.c",
    "blink/close.c",
    "blink/cmpxchg.c",
    "blink/commandv.c",
    "blink/compress.c",
    "blink/cp437.c",
    "blink/cpucount.c",
    "blink/cpuid.c",
    "blink/crc32.c",
    "blink/cvt.c",
    "blink/debug.c",
    "blink/debug2.c",
    "blink/demangle.c",
    "blink/deps.c",
    "blink/describeflags.c",
    "blink/describehosterrno.c",
    "blink/describeprot.c",
    "blink/describesignal.c",
    "blink/devfs.c",
    "blink/dis.c",
    "blink/disarg.c",
    "blink/diself.c",
    "blink/disfree.c",
    "blink/disinst.c",
    "blink/disspec.c",
    "blink/divmul.c",
    "blink/dll.c",
    "blink/doublenul.c",
    "blink/elf.c",
    "blink/endswith.c",
    "blink/errfd.c",
    "blink/errno.c",
    "blink/fds.c",
    "blink/flag.c",
    "blink/flags.c",
    "blink/formatint64.c",
    "blink/formatint64thousands.c",
    "blink/formatsize.c",
    "blink/fpu.c",
    "blink/fspath.c",
    "blink/fusion.c",
    "blink/getopt.c",
    "blink/hex.c",
    "blink/high.c",
    "blink/hostfs.c",
    "blink/instruction.c",
    "blink/ioctl.c",
    "blink/ioports.c",
    "blink/iovs.c",
    "blink/jit.c",
    "blink/jitflush.c",
    "blink/ldbl.c",
    "blink/legacy.c",
    "blink/lines.c",
    "blink/loader.c",
    "blink/log.c",
    "blink/logcpu.c",
    "blink/machine.c",
    "blink/magikarp.c",
    "blink/map.c",
    "blink/mda.c",
    "blink/memccpy.c",
    "blink/memory.c",
    "blink/memorymalloc.c",
    "blink/message.c",
    "blink/metal.c",
    "blink/mkfifoat.c",
    "blink/mmx.c",
    "blink/modrm.c",
    "blink/name.c",
    "blink/oneoff.c",
    "blink/op101.c",
    "blink/open.c",
    "blink/overlays.c",
    "blink/panel.c",
    "blink/path.c",
    "blink/pipe.c",
    "blink/pml4t.c",
    "blink/pml4tfmt.c",
    "blink/popcount.c",
    "blink/ppc.c",
    "blink/preadv.c",
    "blink/procfs.c",
    "blink/prog.c",
    "blink/pte32.c",
    "blink/pty.c",
    "blink/random.c",
    "blink/rdrand.c",
    "blink/readansi.c",
    "blink/realpath.c",
    "blink/reset.c",
    "blink/signal.c",
    "blink/smc.c",
    "blink/sse.c",
    "blink/sse2.c",
    "blink/ssefloat.c",
    "blink/ssemov.c",
    "blink/stack.c",
    "blink/startdir.c",
    "blink/startswith.c",
    "blink/statfs.c",
    "blink/stats.c",
    "blink/strace.c",
    "blink/strchrnul.c",
    "blink/string.c",
    "blink/strwidth.c",
    "blink/syscall.c",
    "blink/sysinfo.c",
    "blink/tainted.c",
    "blink/throw.c",
    "blink/time.c",
    "blink/timespec.c",
    "blink/tpenc.c",
    "blink/uop.c",
    "blink/vasprintf.c",
    "blink/vfs.c",
    "blink/vigna.c",
    "blink/watch.c",
    "blink/wcwidth.c",
    "blink/x86.c",
    "blink/x86error.c",
    "blink/xadd.c",
    "blink/xchg.c",
    "blink/xlat.c",
    "blink/xmmtype.c",
    "blink/xnu.c",
};
